service: gym-challenge-api
frameworkVersion: '3'

plugins:
  - serverless-stage-manager

custom:
  stages: ${file(./serverless/stages.yml):stages}
  functionName: ${sls:stage}-gym-challenge
  stackName: ${self:custom.functionName}-stack
  nodeEnv: ${file(./serverless/node-env.yml):nodeEnv}

provider:
  name: aws
  region: us-east-1
  runtime: nodejs18.x
  timeout: 60
  memorySize: 512
  stage: prod
  stackName: ${self:custom.stackName}
  environment:
    NODE_ENV: ${self:custom.nodeEnv.${sls:stage}}
    STAGE: ${sls:stage}
    MONGODB_DB_NAME: gym-challenge
    MONGODB_URI_OPTIONS: retryWrites=true&w=majority
    MONGODB_URL: ${ssm:/${sls:stage}/mongodb/url}
    MONGODB_USER: ${ssm:/${sls:stage}/mongodb/user}
    MONGODB_PASSWORD: ${ssm:/${sls:stage}/mongodb/password}
    OPENAI_API_KEY: ${ssm:/${sls:stage}/openai/api-key}

package:
  individually: true
  patterns:
    - "!node_modules/**"

functions:
  api:
    handler: dist/index.handler
    name: ${self:custom.functionName}-api
    layers:
      - !Ref DependenciesLambdaLayer
    package:
      patterns:
        - "!./**"
        - "!./dist/jobs/**"
        - dist/**
    events:
      - http:
          method: any
          path: /{any+}

  jobs:
    handler: dist/jobs/index.handler
    name: ${self:custom.functionName}-jobs
    layers:
      - !Ref DependenciesLambdaLayer
    package:
      patterns:
        - "!./**"
        - dist/**
    events:
      - schedule:
          rate: cron(0 3 * * ? *)
          enabled: true
          input:
            job: 'create-random-phrase'

layers:
  dependencies:
    name: ${self:custom.functionName}-dependencies-layer
    path: layers/dependencies
    compatibleRuntimes:
      - nodejs18.x
